service: user-api
frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: arn:aws:dynamodb:${self:provider.region}:*:table/UserDetails-${self:provider.stage}

functions:
  createUser:
    handler: createUser.handler
    environment:
      USER_TABLE: UserDetails-${self:provider.stage}
    events:
      - http:
          path: user
          method: post

  getUser:
    handler: getUser.handler
    environment:
      USER_TABLE: UserDetails-${self:provider.stage}
    events:
      - http:
          path: user
          method: get

  updateUser:
    handler: updateUser.handler
    environment:
      USER_TABLE: UserDetails-${self:provider.stage}
    events:
      - http:
          path: user
          method: put

  deleteUser:
    handler: deleteUser.handler
    environment:
      USER_TABLE: UserDetails-${self:provider.stage}
    events:
      - http:
          path: user
          method: delete

resources:
  Resources:
    userTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UserDetails-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: UserId
            AttributeType: S
          - AttributeName: UserName
            AttributeType: S
        KeySchema:
          - AttributeName: UserId
            KeyType: HASH
          - AttributeName: UserName
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
